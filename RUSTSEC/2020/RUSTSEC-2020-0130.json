{
	"schema_version": "1.6.0",
	"id": "RUSTSEC-2020-0130",
	"modified": "2023-11-08T04:03:45.582098Z",
	"published": "2020-11-12T12:00:00Z",
	"aliases": [
		"CVE-2020-36450",
		"GHSA-jwph-qp5h-f9wj"
	],
	"summary": "Bunch<T> unconditionally implements Send/Sync",
	"details": "Affected versions of this crate unconditionally implements `Send`/`Sync` for `Bunch<T>`.\nThis allows users to insert `T: !Sync` to `Bunch<T>`. It is possible to create a data race to a `T: !Sync` by invoking the `Bunch::get()` API (which returns `&T`) from multiple threads. It is also possible to send `T: !Send` to other threads by inserting `T` inside `Bunch<T>` and sending `Bunch<T>` to another thread, allowing to create a data race by inserting types like `T = Rc<_>`.\n\nSuch data races can lead to memory corruption.",
	"severity": [
		{
			"type": "CVSS_V3",
			"score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
		}
	],
	"affected": [
		{
			"package": {
				"ecosystem": "crates.io",
				"name": "bunch",
				"purl": "pkg:cargo/bunch"
			},
			"ranges": [
				{
					"type": "SEMVER",
					"events": [
						{
							"introduced": "0.0.0-0"
						}
					]
				}
			],
			"ecosystem_specific": {
				"affects": {
					"arch": [],
					"functions": [],
					"os": []
				}
			},
			"database_specific": {
				"categories": [
					"memory-corruption",
					"thread-safety"
				],
				"cvss": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
				"informational": null,
				"source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2020-0130.json"
			}
		}
	],
	"references": [
		{
			"type": "PACKAGE",
			"url": "https://crates.io/crates/bunch"
		},
		{
			"type": "ADVISORY",
			"url": "https://rustsec.org/advisories/RUSTSEC-2020-0130.html"
		},
		{
			"type": "REPORT",
			"url": "https://github.com/krl/bunch/issues/1"
		}
	],
	"database_specific": {
		"license": "CC0-1.0"
	}
}
